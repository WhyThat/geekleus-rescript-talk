// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as Caml_exceptions from "bs-platform/lib/es6/caml_exceptions.js";

function isValid(password) {
  return password.length > 3;
}

var Password = {
  isValid: isValid
};

function reducer(_state, action) {
  return action._0;
}

var initialState = "";

function sendForm(state) {
  return state;
}

var UnvalidPassword = /* @__PURE__ */Caml_exceptions.create("Base.UnvalidPassword");

function send(password) {
  return Promise.resolve("password saved");
}

function Base(Props) {
  var match = React.useReducer(reducer, initialState);
  var dispatch = match[1];
  var password = match[0];
  var onPasswordChange = function (ev) {
    var passwordValue = ev.target.value;
    return Curry._1(dispatch, {
                _0: passwordValue,
                [Symbol.for("name")]: "ChangePassword"
              });
  };
  var onClick = function (param) {
    if (password.length > 3) {
      Promise.resolve("password saved");
      return ;
    }
    
  };
  return React.createElement("div", undefined, React.createElement("input", {
                  type: "text",
                  value: password,
                  onChange: onPasswordChange
                }), React.createElement("div", undefined, password.length > 3 ? "Password valid" : "Password not long enough"), React.createElement("button", {
                  onClick: onClick
                }, "SEND"));
}

var make = Base;

export {
  Password ,
  reducer ,
  initialState ,
  sendForm ,
  UnvalidPassword ,
  send ,
  make ,
  
}
/* react Not a pure module */
